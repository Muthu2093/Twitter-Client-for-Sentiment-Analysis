q()
q()
q()
q()
defaults write org.R-project.R force.LANG en_US.UTF-8
q()
install.packages("ggplot")
install.packages("ggplot2")
jupyter notebook
q()
install.packages("sp")
install.packages('gglplot2', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
warnings()
q()
remove.packages("ggplot2")
install.packages('ggplot2', dependencies = TRUE)
q()
install.packages("sp")
conda install clangxx_osx-64
conda install clangxx_osx-64
q()
install.packages("twitteR")
install.packages(c("devtools", "rjson", "bit64", "httr"))
q()
library(twitteR)
install.packages("twitteR")
q(0
q()
q()
install.packages("twitteR", dependencies = TRUE)
library(twitteR)
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
install.packages("httpuv")
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
install.packages("httpuv", dependencies=TRUE)
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
devtools::install_github("rstudio/httpuv")
install_github("rstudio/httpuv")
getTwitterOAuth(consumer_key, consumer_secret)
getTwitterOAuth(VxJ6qp5XL3VTclBzMBsD1Ez1A, owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m)
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
remove.packages("httpuv")
install.packages("httpuv")
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
cred <- OAuthFactory$new(consumerKey='VxJ6qp5XL3VTclBzMBsD1Ez1A',
consumerSecret='owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en")
tweets
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets,lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
search.string <- "#flu"
no.of.tweets <- 10000
tweets <- searchTwitter(search.string, n=no.of.tweets, geocode="40.7128,74.0060,150mi", lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
tweets
search.string <- "#flu"
no.of.tweets <- 10000
tweets <- searchTwitter(search.string, n=no.of.tweets, geocode="40.7128,74.0060,150mi", lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
View(tweets)
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
View(tweets)
View(tweets)
View(tweets)
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
tweets
View(tweets)
View(tweets)
rm(list =ls())
## loading libraries
library(twitteR)
library(ggplot2)
library(ggmap)
## Setup oauth
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m", "340449785-0AWt3nkBVvLlX7hbUFLl0fEqIKs47qUU7V5UnFWH", "qnaD0Pyp9jUXfwVb82RlSKikuvVi2MAWxp1J0mD1Fle4d")
## Searching for tweets ##
search.string <- "flu"
no.of.tweets <- 15000
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
rm(list =ls())
## loading libraries
library(twitteR)
library(ggplot2)
library(ggmap)
## Setup oauth
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m", "340449785-0AWt3nkBVvLlX7hbUFLl0fEqIKs47qUU7V5UnFWH", "qnaD0Pyp9jUXfwVb82RlSKikuvVi2MAWxp1J0mD1Fle4d")
## Searching for tweets ##
search.string <- "flu"
no.of.tweets <- 5000
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
search.string <- "flu"
no.of.tweets <- 5000
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
Name=Sys.Date()+Sys.time()
Name=paste(Sys.Date(),Sys.time(),sep = ";")
Name=Sys.time()
Name=paste("Data Collected on",Sys.time(),sep = ";")
Name=paste("Data Collected on ",Sys.time(),)
Name=paste("Data Collected on ",Sys.time())
rm(list =ls())
## loading libraries
library(twitteR)
library(ggplot2)
library(ggmap)
## Setup oauth
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m", "340449785-0AWt3nkBVvLlX7hbUFLl0fEqIKs47qUU7V5UnFWH", "qnaD0Pyp9jUXfwVb82RlSKikuvVi2MAWxp1J0mD1Fle4d")
## Searching for tweets ##
search.string <- "flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
## Conversion of searched tweets to Data frame
tweets <- twListToDF(tweets)
## Saving collected data to a csv file
Name=paste("Data Collected on ",Sys.time())
write.csv(tweets, file = Name)
install.packages("choroplethr")
data$ACTIVITY.LEVEL=as.numeric(data$ACTIVITY.LEVEL)
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
setwd("~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts")
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_sampoe.R')
library(ggplot2)
library(reshape)
# First let's make a toy dataset for our stacked plot/line plot example.
year = c(1,2,3,4,5,6)
stocks = c(2,4,3,2,4,3)
exports = stocks*2
domestic = stocks*3
production = c(15,16,15,16,15,16)
# Make 2 df's: alldata is for stacked bar chart, linedata is for plotting a line on top of it.
alldata = data.frame(year,stocks,exports,domestic)
linedata = data.frame(year,production)
# Make alldata 'long' for the stacking
melteddata = melt(alldata,id.vars="year")
# This works fine: (but hooboy was tricky to figure out the ordering w/ stat="identity" )
plotS1 <- ggplot(melteddata, aes(x=year,y=value,factor=variable,fill=variable,order=-as.numeric(variable)))
plotS1 +  geom_bar(stat="identity")
linedata3 <- data.frame(data$Week, data$Percent.Positive.B)
# Make alldata 'long' for the stacking
melteddata = melt(data,id.vars="week")
# This works fine: (but hooboy was tricky to figure out the ordering w/ stat="identity" )
plotS1 <- ggplot(melteddata, aes(x=year,y=value,factor=variable,fill=variable,order=-as.numeric(variable)))
plotS1 +  geom_bar(stat="identity")
# This plots only the line, not the stacked bar chart :
plotS1 <- ggplot(melteddata)
plotS1 +  geom_bar(aes(x=year,y=value,factor=variable,fill=variable,
order=-as.numeric(variable)), stat="identity") +
geom_line(data=linedata, aes(x=year,y=production))
View(melteddata)
View(linedata1)
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable,fill=variable, stat="identity")) +
geom_line(data=linedata, aes(x=data.Week,y=data.data.X..Positive))
library(ggplot2)
library(reshape)
# First let's make a toy dataset for our stacked plot/line plot example.
data <- read.csv("../Data/INS/INS.csv")
data$Week <- as.character(data$Week)
linedata1 <- data.frame(data$Week, data$X..Positive)
linedata2 <- data.frame(data$Week, data$Percent.Positive.A)
linedata3 <- data.frame(data$Week, data$Percent.Positive.B)
# Make alldata 'long' for the stacking
melteddata = melt(data,id.vars="Week")
# This works fine: (but hooboy was tricky to figure out the ordering w/ stat="identity" )
plotS1 <- ggplot(melteddata, aes(x=Week,y=value,fill=variable))
plotS1 +  geom_bar(stat="identity")
# This plots only the line, not the stacked bar chart :
plotS1 <- ggplot(melteddata)
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable,fill=variable, stat="identity")) +
geom_line(data=linedata, aes(x=data.Week,y=data.data.X..Positive))
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable,fill=variable, stat="identity")) +
geom_line(data=linedata1, aes(x=data.Week,y=data.data.X..Positive))
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable,fill=variable, stat="identity")) +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive))
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable,fill=variable)) +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive))
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable,fill=variable)) +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive, stat="identity"))
View(melteddata)
# This plots only the line, not the stacked bar chart :
plotS1 <- ggplot(melteddata[1:34,])
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable,fill=variable, stat="identity")) +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive))
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable, stat="identity")) +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive))
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive))
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive, group=1))
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*500, group=1))
View(data)
library(ggplot2)
library(reshape)
# First let's make a toy dataset for our stacked plot/line plot example.
data <- read.csv("../Data/INS/INS.csv")
data$Week <- as.character(data$Week)
linedata1 <- data.frame(data$Week, data$X..Positive)
linedata2 <- data.frame(data$Week, data$Percent.Positive.A)
linedata3 <- data.frame(data$Week, data$Percent.Positive.B)
SumPAB <- sum(data$Total.A) + sum(data$Total.B)
SumPos <- sum(data$X..Positive)
SumPerA <- sum(data$Percent.Positive.A)
SumPerB <- sum(data$Percent.Positive.B)
fac1 <- SumPAB/SumPos
fac2 <- SumPAB/SumPerA
fac3 <- SumPAB/SumPerB
# Make alldata 'long' for the stacking
melteddata = melt(data,id.vars="Week")
# This works fine: (but hooboy was tricky to figure out the ordering w/ stat="identity" )
plotS1 <- ggplot(melteddata, aes(x=Week,y=value,fill=variable))
plotS1 +  geom_bar(stat="identity")
# This plots only the line, not the stacked bar chart :
plotS1 <- ggplot(melteddata[1:34,])
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
geom_line(data=linedata2, aes(x=data.Week,y=data.Percent.Positive.A*fac2, group=1))+
geom_line(data=linedata3, aes(x=data.Week,y=data.Percent.Positive.B*fac1, group=1))
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
library(ggplot2)
library(reshape)
# First let's make a toy dataset for our stacked plot/line plot example.
data <- read.csv("../Data/INS/INS.csv")
data$Week <- as.character(data$Week)
linedata1 <- data.frame(data$Week, data$X..Positive)
linedata2 <- data.frame(data$Week, data$Percent.Positive.A)
linedata3 <- data.frame(data$Week, data$Percent.Positive.B)
SumPAB <- sum(data$Total.A) + sum(data$Total.B)
SumPos <- sum(data$X..Positive)
SumPerA <- sum(data$Percent.Positive.A)
SumPerB <- sum(data$Percent.Positive.B)
fac1 <- SumPAB/SumPos +100
fac2 <- SumPAB/SumPerA
fac3 <- SumPAB/SumPerB
# Make alldata 'long' for the stacking
melteddata = melt(data,id.vars="Week")
# This works fine: (but hooboy was tricky to figure out the ordering w/ stat="identity" )
plotS1 <- ggplot(melteddata, aes(x=Week,y=value,fill=variable))
plotS1 +  geom_bar(stat="identity")
# This plots only the line, not the stacked bar chart :
plotS1 <- ggplot(melteddata[1:34,])
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
geom_line(data=linedata2, aes(x=data.Week,y=data.Percent.Positive.A*fac2, group=1))+
geom_line(data=linedata3, aes(x=data.Week,y=data.Percent.Positive.B*fac3, group=1))
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
View(data)
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
library(ggplot2)
library(reshape)
# First let's make a toy dataset for our stacked plot/line plot example.
data <- read.csv("../Data/INS/INS.csv")
data$Week <- as.character(data$Week)
linedata1 <- data.frame(data$Week, data$X..Positive)
linedata2 <- data.frame(data$Week, data$Percent.Positive.A)
linedata3 <- data.frame(data$Week, data$Percent.Positive.B)
SumPAB <- sum(data$Total.A) + sum(data$Total.B)
SumPos <- sum(data$X..Positive)
SumPerA <- sum(data$Percent.Positive.A)
SumPerB <- sum(data$Percent.Positive.B)
fac1 <- SumPAB/SumPos
fac2 <- SumPAB/SumPerA
fac3 <- SumPerB/SumPerB
# Make alldata 'long' for the stacking
melteddata = melt(data,id.vars="Week")
# This works fine: (but hooboy was tricky to figure out the ordering w/ stat="identity" )
#plotS1 <- ggplot(melteddata, aes(x=Week,y=value,fill=variable))
#plotS1 +  geom_bar(stat="identity")
# This plots only the line, not the stacked bar chart :
plotS1 <- ggplot(melteddata[1:34,])
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
geom_line(data=linedata2, aes(x=data.Week,y=data.Percent.Positive.A*fac2, group=1))+
geom_line(data=linedata3, aes(x=data.Week,y=data.Percent.Positive.B*fac3, group=1))
fac3 <- SumPAB/SumPerB
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
geom_line(data=linedata2, aes(x=data.Week,y=data.Percent.Positive.A*fac2, group=1))+
geom_line(data=linedata3, aes(x=data.Week,y=data.Percent.Positive.B*fac3, group=1))
View(linedata3)
View(data)
plotS1 +  geom_bar(aes(x=Week,y=value,fill=variable,
order=-as.numeric(variable)), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1)) +
scale_x_continuous() +
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~.*2+2, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_sampoe.R')
plotS1 +  geom_bar(aes(x=Week,y=value,factor=variable, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~.*2+2, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./2500+2, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./666+2, name="y_second") )
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
stat_summary(aes(y=receivedPower_dbm ), fun.y=mean, geom="line", colour="black") +
stat_summary(aes(y=packetOkSinr*40 - 110 ), fun.y=mean, geom="line", colour="black", position = position_dodge(width=10)) +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./666+2, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
geom_line(data=linedata2, aes(x=data.Week,y=data.Percent.Positive.A*fac2, group=1))+
geom_line(data=linedata3, aes(x=data.Week,y=data.Percent.Positive.B*fac3, group=1)) +
scale_x_continuous() +
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./666+2, name="y_second") )
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
geom_line(data=linedata2, aes(x=data.Week,y=data.Percent.Positive.A*fac2, group=1))+
geom_line(data=linedata3, aes(x=data.Week,y=data.Percent.Positive.B*fac3, group=1)) +
#scale_x_continuous() +
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./666+2, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./3000+2, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./5000+2, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/test_2.R')
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./1000000+2, name="y_second") )
plotS1 +  geom_bar(aes(x=Week,y=value, fill=variable), stat="identity") +
geom_line(data=linedata1, aes(x=data.Week,y=data.X..Positive*fac1, group=1))+
scale_y_continuous(breaks = seq(0,0,5000), "y_first", sec.axis=sec_axis(~./3000+100, name="y_second") )
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/plotly.R')
source('~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts/plotly.R')
library(plotly)
install.packages("plotluy")
install.packages("plotly")
library(plotly)
install.packages("plotly")
library(plotly)
library(plotly)
install.packages("plotly")
install.packages("plotly", dependencies= TRUE)
library(plotly)
sudo apt-get install libssl-dev
install.packages("devtools")
library(plotly)
install.packages("plotly")
library(plotly)
devtools::install_github("ropensci/plotly")
update.packages("ggplot2")
instal.packages("plotly")
install.packages("plotly")
library(plotly)
install.packages("ggplot2",type="source")
install.packages("ggplot2", type = "source")
install.packages("ggplot2", type = "source")
install.packages("ggplot2", type = "source")
install.packages("ggplot2", type = "source")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("plotluy")
install.packages("plotly")
install.packages("httpuv")
library(plotly)
devtools::install_github("ropensci/plotly")
devtools::install_github("ropensci/plotly")
install.packages("devtools")
install.packages("plotly")
devtools::install_github("ropensci/plotly")
install.packages("plotly", dependencies = TRUE)
options(tz="USA/New York")
install.packages("plotly", dependencies = TRUE)
(plotly)
library(plotly)
Sys.setenv(TZ='GMT')
