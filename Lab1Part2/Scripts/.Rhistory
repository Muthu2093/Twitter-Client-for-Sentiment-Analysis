q()
q()
q()
q()
defaults write org.R-project.R force.LANG en_US.UTF-8
q()
install.packages("ggplot")
install.packages("ggplot2")
jupyter notebook
q()
install.packages("sp")
install.packages('gglplot2', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
warnings()
q()
remove.packages("ggplot2")
install.packages('ggplot2', dependencies = TRUE)
q()
install.packages("sp")
conda install clangxx_osx-64
conda install clangxx_osx-64
q()
install.packages("twitteR")
install.packages(c("devtools", "rjson", "bit64", "httr"))
q()
library(twitteR)
install.packages("twitteR")
q(0
q()
q()
install.packages("twitteR", dependencies = TRUE)
library(twitteR)
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
install.packages("httpuv")
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
install.packages("httpuv", dependencies=TRUE)
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
devtools::install_github("rstudio/httpuv")
install_github("rstudio/httpuv")
getTwitterOAuth(consumer_key, consumer_secret)
getTwitterOAuth(VxJ6qp5XL3VTclBzMBsD1Ez1A, owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m)
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
remove.packages("httpuv")
install.packages("httpuv")
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m")
cred <- OAuthFactory$new(consumerKey='VxJ6qp5XL3VTclBzMBsD1Ez1A',
consumerSecret='owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en")
tweets
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets,lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
search.string <- "#flu"
no.of.tweets <- 10000
tweets <- searchTwitter(search.string, n=no.of.tweets, geocode="40.7128,74.0060,150mi", lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
tweets
search.string <- "#flu"
no.of.tweets <- 10000
tweets <- searchTwitter(search.string, n=no.of.tweets, geocode="40.7128,74.0060,150mi", lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
View(tweets)
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
tweets
View(tweets)
View(tweets)
View(tweets)
View(tweets)
View(tweets)
View(tweets)
search.string <- "#flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
tweets
View(tweets)
View(tweets)
rm(list =ls())
## loading libraries
library(twitteR)
library(ggplot2)
library(ggmap)
## Setup oauth
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m", "340449785-0AWt3nkBVvLlX7hbUFLl0fEqIKs47qUU7V5UnFWH", "qnaD0Pyp9jUXfwVb82RlSKikuvVi2MAWxp1J0mD1Fle4d")
## Searching for tweets ##
search.string <- "flu"
no.of.tweets <- 15000
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
rm(list =ls())
## loading libraries
library(twitteR)
library(ggplot2)
library(ggmap)
## Setup oauth
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m", "340449785-0AWt3nkBVvLlX7hbUFLl0fEqIKs47qUU7V5UnFWH", "qnaD0Pyp9jUXfwVb82RlSKikuvVi2MAWxp1J0mD1Fle4d")
## Searching for tweets ##
search.string <- "flu"
no.of.tweets <- 5000
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
search.string <- "flu"
no.of.tweets <- 5000
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
Name=Sys.Date()+Sys.time()
Name=paste(Sys.Date(),Sys.time(),sep = ";")
Name=Sys.time()
Name=paste("Data Collected on",Sys.time(),sep = ";")
Name=paste("Data Collected on ",Sys.time(),)
Name=paste("Data Collected on ",Sys.time())
rm(list =ls())
## loading libraries
library(twitteR)
library(ggplot2)
library(ggmap)
## Setup oauth
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m", "340449785-0AWt3nkBVvLlX7hbUFLl0fEqIKs47qUU7V5UnFWH", "qnaD0Pyp9jUXfwVb82RlSKikuvVi2MAWxp1J0mD1Fle4d")
## Searching for tweets ##
search.string <- "flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
## Conversion of searched tweets to Data frame
tweets <- twListToDF(tweets)
## Saving collected data to a csv file
Name=paste("Data Collected on ",Sys.time())
write.csv(tweets, file = Name)
install.packages("choroplethr")
library(ggplot2)
library(maps)
library(fiftystater)
library(maps)
data <- read.csv("../Data/Heat Map/heatmap.csv")
data$ACTIVITY.LEVEL <- gsub("Level 10",10, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 9",9, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 8",8, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 7",7, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 6",6, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 5",5, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 4",4, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 3",3, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 2",2, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 1",1, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 0",0, data$ACTIVITY.LEVEL)
data$STATENAME <- as.list(tolower(data$STATENAME))
data("fifty_states") # this line is optional due to lazy data loading
data$STATENAME <- unlist(data$STATENAME)
data$ACTIVITY.LEVEL=as.numeric(data$ACTIVITY.LEVEL)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(data, aes(map_id = STATENAME)) +
geom_map(aes(fill = ACTIVITY.LEVEL), map = fifty_states, color = "black") +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
scale_color_brewer(palette = heat.colors(11)) +
scale_fill_gradient2(low="yellow1", mid = "green", high="red2", midpoint = 5) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
ggtitle("2017-18 Influenza Season Week 4 ending Jan 27, 2018") +
theme(legend.position = "right",
plot.title = element_text(family = "Helvetica Neue", color="#666666", face="bold", size=12, hjust=0))
print(p + ggtitle("Petal and sepal length of iris"))
# add border boxes to AK/HI
p + fifty_states_inset_boxes()
library(ggplot2)
library(maps)
library(fiftystater)
library(maps)
data <- read.csv("../Data/Heat Map/heatmap.csv")
data$ACTIVITY.LEVEL <- gsub("Level 10",10, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 9",9, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 8",8, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 7",7, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 6",6, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 5",5, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 4",4, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 3",3, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 2",2, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 1",1, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 0",0, data$ACTIVITY.LEVEL)
data$STATENAME <- as.list(tolower(data$STATENAME))
data("fifty_states") # this line is optional due to lazy data loading
data$STATENAME <- unlist(data$STATENAME)
data$ACTIVITY.LEVEL=as.numeric(data$ACTIVITY.LEVEL)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(data, aes(map_id = STATENAME)) +
geom_map(aes(fill = ACTIVITY.LEVEL), map = fifty_states, color = "black") +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
#scale_color_brewer(palette = "Spectral") +
scale_fill_gradient2(heat.colors(11)) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
ggtitle("2017-18 Influenza Season Week 4 ending Jan 27, 2018") +
theme(legend.position = "right",
plot.title = element_text(family = "Helvetica Neue", color="#666666", face="bold", size=12, hjust=0))
print(p + ggtitle("Petal and sepal length of iris"))
# add border boxes to AK/HI
p + fifty_states_inset_boxes()
library(ggplot2)
library(maps)
library(fiftystater)
library(maps)
data <- read.csv("../Data/Heat Map/heatmap.csv")
data$ACTIVITY.LEVEL <- gsub("Level 10",10, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 9",9, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 8",8, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 7",7, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 6",6, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 5",5, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 4",4, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 3",3, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 2",2, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 1",1, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 0",0, data$ACTIVITY.LEVEL)
data$STATENAME <- as.list(tolower(data$STATENAME))
data("fifty_states") # this line is optional due to lazy data loading
data$STATENAME <- unlist(data$STATENAME)
data$ACTIVITY.LEVEL=as.numeric(data$ACTIVITY.LEVEL)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(data, aes(map_id = STATENAME)) +
geom_map(aes(fill = ACTIVITY.LEVEL), map = fifty_states, color = "black") +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
#scale_color_brewer(palette = "Spectral") +
scale_fill_gradient2(low="yellow1", mid = "green", high="red2", midpoint = 5) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
ggtitle("2017-18 Influenza Season Week 4 ending Jan 27, 2018") +
theme(legend.position = "right",
plot.title = element_text(family = "Helvetica Neue", color="#666666", face="bold", size=12, hjust=0))
print(p + ggtitle("Petal and sepal length of iris"))
# add border boxes to AK/HI
p + fifty_states_inset_boxes()
library(ggplot2)
library(maps)
library(fiftystater)
library(maps)
data <- read.csv("../Data/Heat Map/heatmap.csv")
data$ACTIVITY.LEVEL <- gsub("Level 10",10, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 9",9, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 8",8, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 7",7, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 6",6, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 5",5, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 4",4, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 3",3, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 2",2, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 1",1, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 0",0, data$ACTIVITY.LEVEL)
data$STATENAME <- as.list(tolower(data$STATENAME))
data("fifty_states") # this line is optional due to lazy data loading
data$STATENAME <- unlist(data$STATENAME)
data$ACTIVITY.LEVEL=as.numeric(data$ACTIVITY.LEVEL)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(data, aes(map_id = STATENAME)) +
geom_map(aes(fill = ACTIVITY.LEVEL), map = fifty_states, color = "black") +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
#scale_color_brewer(palette = "Spectral") +
scale_fill_gradient2(low="yellow1", mid = "green", high="red2", midpoint = 5) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
ggtitle("2017-18 Influenza Season Week 4 ending Jan 27, 2018") +
theme(legend.position = "right",
plot.title = element_text(family = "Helvetica Neue", color="#666666", face="bold", size=12, hjust=0))
print(p + ggtitle("Petal and sepal length of iris"))
# add border boxes to AK/HI
p + fifty_states_inset_boxes()
setwd("~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part2/Scripts")
library(ggplot2)
library(maps)
library(fiftystater)
library(maps)
data <- read.csv("../Data/Heat Map/heatmap.csv")
data$ACTIVITY.LEVEL <- gsub("Level 10",10, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 9",9, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 8",8, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 7",7, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 6",6, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 5",5, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 4",4, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 3",3, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 2",2, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 1",1, data$ACTIVITY.LEVEL)
data$ACTIVITY.LEVEL <- gsub("Level 0",0, data$ACTIVITY.LEVEL)
data$STATENAME <- as.list(tolower(data$STATENAME))
data("fifty_states") # this line is optional due to lazy data loading
data$STATENAME <- unlist(data$STATENAME)
data$ACTIVITY.LEVEL=as.numeric(data$ACTIVITY.LEVEL)
# map_id creates the aesthetic mapping to the state name column in your data
p <- ggplot(data, aes(map_id = STATENAME)) +
geom_map(aes(fill = ACTIVITY.LEVEL), map = fifty_states, color = "black") +
expand_limits(x = fifty_states$long, y = fifty_states$lat) +
coord_map() +
#scale_color_brewer(palette = "Spectral") +
scale_fill_gradient2(low="yellow1", mid = "green", high="red2", midpoint = 5) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
labs(x = "", y = "") +
ggtitle("2017-18 Influenza Season Week 4 ending Jan 27, 2018") +
theme(legend.position = "right",
plot.title = element_text(family = "Helvetica Neue", color="#666666", face="bold", size=12, hjust=0))
print(p + ggtitle("Petal and sepal length of iris"))
# add border boxes to AK/HI
p + fifty_states_inset_boxes()
