library(ggplot2)
library(ggmap)
## Setup oauth
setup_twitter_oauth("VxJ6qp5XL3VTclBzMBsD1Ez1A", "owezT5IVRVG8nvkSHXxqq4t2McwPO6mxesJTGU2549yHTJbP8m", "340449785-0AWt3nkBVvLlX7hbUFLl0fEqIKs47qUU7V5UnFWH", "qnaD0Pyp9jUXfwVb82RlSKikuvVi2MAWxp1J0mD1Fle4d")
## Searching for tweets ##
search.string <- "flu"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, lang="en")
## Conversion of searched tweets to Data frame
tweets <- twListToDF(tweets)
## Saving collected data to a csv file
Name=paste("Data Collected on ",Sys.time())
write.csv(tweets, file = Name)
install.packages("choroplethr")
setwd("~/Documents/GitHub/Twitter-client-for-Data-Collection-and-Exploratory-Data-Analysis-/Lab1Part3/Scripts")
DWL=read.csv("../data_collected/data_With_location")
DWL<- subset(DWL, select = -c(X)) #removing column named X
library(zipcode)
zipcode
data(zipcode)
View(DWL)
View(DWL)
location_GeoCode <- read.csv("../data_collected/location_GeoCode")
location_GeoCode<- subset(location_GeoCode, select = -c(X)) #removing column named X
View(location_GeoCode)
library(zipcode)
data(zipcode)
View(zipcode)
View(location_GeoCode)
zipcode[1:1]
zipcode(1)
zipcode[1,1]
View(location_GeoCode)
View(zipcode)
View(location_GeoCode)
View(zipcode)
View(location_GeoCode)
trunc(zipcode*10^4)/10^4
a <- trunc(location_GeoCode$lat*10^4)/10^4
a <- data.frame(trunc(location_GeoCode$lat*10^4)/10^4)
View(a)
View(zipcode)
library(zipcode)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10/5)/10^5)
geocodes <- cbind(a,b)
View(geocodes)
View(location_GeoCode)
library(zipcode)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(a,b)
View(geocodes)
colnames(geocodes) <- c("latitude","longitude")
View(geocodes)
zip <- cbind(zipcode$latitude,zipcode$longitude)
View(zipcode)
View(zipcode)
zip <- rbind(zipcode$latitude,zipcode$longitude)
zip <- rbind(zipcode$latitude,zipcode$longitude)
a<- zipcode$latitude
b<- zipcode$longitude
zip <- cbind(a,b)
library(zipcode)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(a,b)
colnames(geocodes) <- c("latitude","longitude")
a<- zipcode$latitude
b<- zipcode$longitude
zip <- cbind(a,b)
comparison <- compare(geocodes,zipcode)
a<- zipcode$latitude
library(zipcode)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(a,b)
colnames(geocodes) <- c("latitude","longitude")
a<- data.frame(zipcode$latitude)
b<- data.frame(zipcode$longitude)
zip <- cbind(a,b)
comparison <- compare(geocodes,zipcode)
View(zip)
comparison <- compare(geocodes,zipcode,allowALL=TRUE)
library(zipcode)
library(compare)
install.packages("compare")
library(zipcode)
library(compare)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(a,b)
colnames(geocodes) <- c("latitude","longitude")
a<- data.frame(zipcode$latitude)
b<- data.frame(zipcode$longitude)
zip <- cbind(a,b)
comparison <- compare(geocodes,zipcode,allowALL=TRUE)
comparison <- compare(geocodes,zipcode)
View(comparison)
comparison <- compare(geocodes$latitude,zipcode$latitude)
View(comparison)
geocodes$latitude[1]
geocodes$latitude[0]
length(zip)
comparison <- compare(geocodes$latitude,zip$latitude)
library(zipcode)
library(compare)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(a,b)
colnames(geocodes) <- c("latitude","longitude")
a<- data.frame(zipcode$latitude)
b<- data.frame(zipcode$longitude)
zip <- cbind(a,b)
for (i in 1:22223)
{
for (j in 1:44336)
{
if (geocodes$latitude[i]==zip$latitude[j])
{
if (geocodes$longitude[i]==zip$longitude[j])
{
if (k==1)
{
US_states=data.frame(zipcode$state[j])
}
if (k!=1)
{
temp = data.frame(zipcocode$state[j])
US_states= rbind(US_states,temp)
}
}
}
}
}
geocodes$latitude[i]
zip$latitude[j]
View(zip)
View(zipcode)
View(zip)
colnames(zip) <- c("latitude","longitude")
View(zip)
library(zipcode)
library(compare)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(a,b)
colnames(geocodes) <- c("latitude","longitude")
a<- data.frame(zipcode$latitude)
b<- data.frame(zipcode$longitude)
zip <- cbind(a,b)
colnames(zip) <- c("latitude","longitude")
View(zip)
View(geocodes)
View(zipcode)
k=1
for (i in 1:22223)
{
for (j in 1:44336)
{
if (geocodes$latitude[i]==zip$latitude[j])
{
if (geocodes$longitude[i]==zip$longitude[j])
{
if (k==1)
{
US_states=data.frame(zipcode$state[j])
k <- k+1
}
if (k!=1)
{
temp = data.frame(zipcocode$state[j])
US_states= rbind(US_states,temp)
k <- k+1
}
}
}
}
}
zip$latitude[j]
zip$latitude
zip$latitude[1]
j
View(zip)
if (zip$latitude[j]==NA)
{
a
}
if (zip$latitude[j]=="NA")
{
j
}
if (is.na(zip$latitude[j])
{
i
}
library(zipcode)
library(compare)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(a,b)
colnames(geocodes) <- c("latitude","longitude")
a<- data.frame(zipcode$latitude)
b<- data.frame(zipcode$longitude)
zip <- cbind(a,b)
colnames(zip) <- c("latitude","longitude")
k=1
for (i in 1:22223)
{
if (is.na(geocodes$latitude[i]))
{
next
}
if (is.na(geocodes$longitude[i]))
{
next
}
for (j in 1:44336)
{
if (is.na(zip$latitude[j]))
{
next
}
if (is.na(zip$longitude[j]))
{
next
}
if (geocodes$longitude[i]==zip$longitude[j])
{
if (geocodes$longitude[i]==zip$longitude[j])
{
if (k==1)
{
US_states=data.frame(zipcode$state[j])
k <- k+1
}
if (k!=1)
{
temp = data.frame(zipcocode$state[j])
US_states= rbind(US_states,temp)
k <- k+1
}
}
}
}
}
k=1
for (i in 1:22223)
{
if (is.na(geocodes$latitude[i]))
{
next
}
if (is.na(geocodes$longitude[i]))
{
next
}
for (j in 1:44336)
{
if (is.na(zip$latitude[j]))
{
next
}
if (is.na(zip$longitude[j]))
{
next
}
if (geocodes$longitude[i]==zip$longitude[j])
{
if (geocodes$longitude[i]==zip$longitude[j])
{
if (k==1)
{
US_states=data.frame(zipcode$state[j])
k <- k+1
}
if (k!=1)
{
temp = data.frame(zipcocode$state[j])
US_states= rbind(US_states,temp)
k <- k+1
}
}
}
}
print(i)
}
comparison <- compare(geocodes$latitude,zip$latitude)
View(comparison)
comparison <- compareEqual(geocodes$latitude,zip$latitude)
View(comparison)
identical(a[, "x"], b[, "y"]) # TRUE
identical(a, b) # TRUE
View(US_states)
identical(a, b) # TRUE
identical(zip,geocodes)
compare(geocodes[i]==zip[j])
compare(geocodes[1]==zip[1])
compare(geocodes[1],zip[1])
k=1
for (i in 1:22223)
{
if (is.na(geocodes$latitude[i]))
{
next
}
if (is.na(geocodes$longitude[i]))
{
next
}
for (j in 1:44336)
{
if (is.na(zip$latitude[j]))
{
next
}
if (is.na(zip$longitude[j]))
{
next
}
if (compare(geocodes[i],zip[j])==TRUE)
{
if (k==1)
{
US_states=data.frame(zipcode$state[j])
k <- k+1
}
if (k!=1)
{
temp = data.frame(zipcocode$state[j])
US_states= rbind(US_states,temp)
k <- k+1
}
}
}
print(i)
}
library(dplyr)
inner_join(zip,geocodes)
ans <- inner_join(zip,geocodes)
View(ans)
library(data.table)
fintersect(setDT(zip), setDT(geocodes))
View(geocodes)
View(zip)
compare(geocodes[1],zip[1])
reverse_geocode(zip(1))
reversegeocode(zip(1))
reverseGeocode(zip(1))
revgeocode(zip[1])
library(ggplot2)
revgeocode(zip[1])
library(ggmap)
revgeocode(zip[1])
zip <- cbind(b,a)
library(zipcode)
library(zipcode)
library(compare)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(b,a)
colnames(geocodes) <- c("latitude","longitude")
a<- data.frame(zipcode$latitude)
b<- data.frame(zipcode$longitude)
zip <- cbind(b,a)
colnames(zip) <- c("latitude","longitude")
View(geocodes)
library(zipcode)
library(compare)
data(zipcode)
a <- data.frame(trunc(location_GeoCode$lat*10^5)/10^5)
b <- data.frame(trunc(location_GeoCode$lon*10^5)/10^5)
geocodes <- cbind(b,a)
colnames(geocodes) <- c("longitude","latitude")
a<- data.frame(zipcode$latitude)
b<- data.frame(zipcode$longitude)
zip <- cbind(b,a)
colnames(zip) <- c("longitude","latitude")
View(geocodes)
revgeocode(geocodes[1])
length(geocodes[1])
geocodes[1]
geocodes[:,1]
revgeocode([geocodes$longitude[1],geocodes$latitude[1]])
revgeocode(geocodes$longitude[1],geocodes$latitude[1])
revgeocode((geocodes$longitude[1],geocodes$latitude[1]))
zip(1)
zip[1]
geocodes[1]
geocodes[1]
View(geocodes)
a <- geocodes[1]
View(a)
a <- geocodes[1,]
revgeocode(geocodes[1,])
is.numeric(geocodes[1,])
View(b)
View(zip)
length(geocdoes[1,])
length(geocodes[1,])
a <- revgeocode(location_GeoCode)
View(location_GeoCode)
View(location_GeoCode[1,])
a <- revgeocode(location_GeoCode[1,])
a <- geocode("Buffalo")
a
a <- geocode("Buffalo, NY")
a <- geocode("Buffalo, NY", override_limit = FALSE)
a
a <- revgeocode(a)
a <- as.numeric(a)
a <- revgeocode(a)
View(a)
a <- revgeocode(a)
a <- geocode("Buffalo, NY", override_limit = FALSE)
a <- as.numeric(a)
View(ans)
( gc <- as.numeric(geocode('Baylor University')) )
a <- revgeocode(gc)
a <- revgeocode(gc, output="address"")
add <- revgeocode(gc, output = "address")
add
add <- revgeocode(gc, item = "state")
add <- revgeo(gc, item = "state")
install.packages("revgeo")
library(revgeo)
revgeo(longitude=-77.0229529, latitude=38.89283435)
install.packages('revgeo')
library(revgeo)
library(twitteR)
library(ggplot2)
library(ggmap)
library(data.table)
setwd("../data_collected")
location_GeoCode <- read.csv("../data_collected/location_GeoCode")
location_GeoCode<- subset(location_GeoCode, select = -c(X)) #removing column named X
setwd("../Scripts")
setwd("../data_collected")
index <- read.csv("../data_collected/index")
index <- subset(index, select = -c(X)) #removing column named X
setwd("../Scripts")
indicator <- 0
start=index$i[1]
end=index$i[1]+2500
for (i in start:end)
{
print(i)
# Checking if we are exceeding the dimension of tweet input DF
if (i>=nrow(location_GeoCode))
{
i=i-1
break
}
a <- data.frame(revgeocode(as.numeric(location_GeoCode[i,]),output = c("more"), override_limit = TRUE))
#if (is.na(a))
#{
#  next
#}
temp <- data.frame(a$administrative_area_level_1)
if (indicator == 0)
{
states = temp
indicator <- 1
}
if (states != 0)
{
states = rbind(states,temp)
}
}
i=i+1
## Storing the last index of reverserGeocode to set the starting point of next query
setwd("../data_collected")
write.csv(data.frame(i), file = "index")
setwd("../Scripts")
## Reading the states extracted from reverse_geocode  so far
setwd("../data_collected")
statesFrequency <- read.csv("../data_collected/statesFrequency")
statesFrequency<- subset(statesFrequency, select = -c(X)) #removing column named X
setwd("../Scripts")
## Writing the conslidated states to csv file
statesFrequency = rbind(statesFrequency,states)
setwd("../data_collected")
write.csv(statesFrequency, file = "statesFrequency")
setwd("../Scripts")
View(index)
View(index)
View(statesFrequency)
View(statesFrequency)
index <- read.csv("../data_collected/index")
View(index)
## Reading the tweet collected so far
setwd("../data_collected")
location_GeoCode <- read.csv("../data_collected/location_GeoCode")
View(location_GeoCode)
location_GeoCode<- subset(location_GeoCode, select = -c(X)) #removing column named X
View(location_GeoCode)
View(location_GeoCode)
View(states)
View(a)
View(geocodes)
View(location_GeoCode)
clear
clc
